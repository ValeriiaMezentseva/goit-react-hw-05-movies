{"version":3,"file":"static/js/280.98b921c4.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","components/SearchedMovies/SearchedMovies.styled.jsx","components/SearchedMovies/SearchedMovies.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\n\nalign-items: center;\ntext-decoration: none;\ncolor: black;\nfont-weight: 500;\n\n&.active {\n    color: white;\n    background-color: #bd0000;\n  }\n`;\n\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 32px 16px;\n \n  justify-content: center;\n  grid-auto-rows: auto;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 0;\n`;\n\nexport const MovieCardBox = styled.li`\ndisplay: flex;\nflex-direction: column;\nborder-radius: 6px;\nborder: 1px solid #000;\ntransition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1), box-shadow 600ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover,\n&:focus {\n  transform: scale(1.05);\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n`","import styled from \"@emotion/styled\";\n\nexport const Poster = styled.img`\n width: 400px;\n height: 535px;\n object-fit: cover;\n border-top-left-radius: 6px;\n border-top-right-radius: 6px;\n`;\n\nexport const Info = styled.div`\npadding-top: 12px;\npadding-left: 12px;\n`;\n\nexport const Title = styled.h2`\ntext-decoration: none; \nmargin: 0; \nfont-size: 20px;\nletter-spacing: 0.04em;\n`\n\nexport const MovieInfo = styled.p`\nfont-size: 14px;\nfont-weight: 500;\nline-height: 16px;\nletter-spacing: 0.04em;\n`; \n\n\nexport const Rating = styled.span`\nmargin-left: 10px;\nbackground-color: orange;\npadding: 3px 12px;\ncolor: #000;\nborder-radius: 5px;\n`","import PropTypes from 'prop-types';\nimport { Poster, Info, Title, MovieInfo, Rating } from './MovieCard.styled';\nimport noPoster from '../../images/no-poster.jpeg';\n\n\nexport const MovieCard = ({ id, title, poster, releaseDate, voteAverage = 1, }) => {\n    return (\n        <>\n            <div>\n                <Poster\n                    src={poster ? `https://image.tmdb.org/t/p/w300/${poster}` : noPoster}\n                    alt={title}\n                    loading=\"lazy\" />\n            </div>\n            <Info>\n                <Title>{title}</Title>\n                <MovieInfo>\n                    { releaseDate ? new Date(releaseDate).getFullYear() : 'No information'}\n                    <Rating>{voteAverage.toFixed(1)}</Rating>\n                </MovieInfo>\n            </Info>\n        </>\n    )\n\n};\n\nMovieCard.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    poster: PropTypes.string, \n    releaseDate: PropTypes.string, \n    voteAverage: PropTypes.number,\n}\n\n\n\n","import { useLocation } from \"react-router-dom\";\nimport { Link, List, MovieCardBox } from \"./MovieList.styled\";\nimport { MovieCard } from \"components/MovieCard/MovieCard\";\nimport PropTypes from 'prop-types'\n\n\n\n\nconst MovieList = ({ collection }) => {\n    const location = useLocation();\n      const prevUrl = location.pathname === '/' ? '/movies/' : '';\n\n    return (\n        <List>\n        {collection.map(({ id, title, poster_path, release_date, vote_average }) =>\n      (  <MovieCardBox key={id}>\n            <Link to={`${prevUrl}${id}`} state={{ from: location }}>\n                <MovieCard\n                    id={id}\n                    title={title}\n                    poster={poster_path}\n                    releaseDate={release_date}\n                    voteAverage={vote_average}\n\n                />\n            </Link>\n        </MovieCardBox>\n        ))}\n    </List>)\n}; \n\nMovieList.propTypes = { \n   collection: PropTypes.arrayOf(PropTypes.shape({\n       id: PropTypes.number.isRequired,\n       title: PropTypes.string.isRequired, \n       poster: PropTypes.string, \n       releaseDate: PropTypes.string, \n       voteAverage: PropTypes.number, \n    })),\n}\n\nexport default MovieList;","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;","import styled from \"@emotion/styled\";\nimport { Field, Form } from 'formik';\n\nexport const SearchMoviesForm = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n    `;\n    \nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid gray; \n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    &:hover {\n     border-color: black; \n    }\n`;\nexport const Input = styled(Field)`\ndisplay: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n}\n`;\n\nexport const SearchButton = styled.button`\ndisplay: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n  opacity: 1;\n}\n`;\n// export const LabelBtn = styled.span`\n// position: absolute;\n//   width: 1px;\n//   height: 1px;\n//   padding: 0;\n//   overflow: hidden;\n//   clip: rect(0, 0, 0, 0);\n//   white-space: nowrap;\n//   clip-path: inset(50%);\n//   border: 0;\n// `;","import { SearchMoviesForm, StyledForm, SearchButton, Input } from \"./SearchedMovies.styled\";\nimport PropTypes from 'prop-types';\nimport { GoSearch } from 'react-icons/go';\nimport { Formik } from 'formik';\n\nconst initialValues = {\n  query: '',\n};\nexport const SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = (value, { resetForm }) => {\n    if (value.query.trim() === '') {\n      return;\n    }\n    onSubmit(value.query);\n    resetForm();\n  };\n\n  return (\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n          <SearchMoviesForm>\n              <StyledForm>\n                  <Input name=\"query\" type=\"text\" placeholder=\"Search the movie\"/>\n                   <SearchButton type=\"submit\">\n                      <GoSearch />\n                  </SearchButton>\n              </StyledForm>\n              </SearchMoviesForm>\n    </Formik>\n  );\n};\n\nSearchMovies.propTypes = { onSubmit: PropTypes.func.isRequired, };","import { Outlet, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from \"react\";\nimport { getSearchedMovie } from \"services/api\";\nimport { Container } from './Movies.styled';\nimport MovieList from 'components/MovieList/MovieList';\nimport { SearchMovies }  from 'components/SearchedMovies/SearchedMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]); \n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n\n  useEffect(() => {\n    if (query) {\n      setLoading(true);\n      getSearchedMovie(query)\n        .then(data => {\n          if (data.length === 0) {\n            toast.error(\"Sorry, we couldn't find anything on your request\")\n          }\n          setSearchMovies(data)\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [query]);\n\n  const updateQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <Container>\n        <SearchMovies onSubmit={q => updateQuery(q)} />\n        {loading && <Loader />}\n      <MovieList collection={searchMovies} />\n        <Outlet />\n      </Container>\n      <Toaster />\n    </>\n  );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst API_KEY = 'a672ae57e08bb16567badfa77d9e520f'; \n\nexport async function getMovieById(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\nexport async function getMovieCast(movieId) {\n     const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getMovieReviews(movieId) {\n  try {\n             const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSearchedMovie(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}"],"names":["Link","styled","NavLink","List","MovieCardBox","Poster","Info","Title","MovieInfo","Rating","MovieCard","id","title","poster","releaseDate","voteAverage","src","noPoster","alt","loading","Date","getFullYear","toFixed","collection","location","useLocation","prevUrl","pathname","map","poster_path","release_date","vote_average","to","state","from","Container","SearchMoviesForm","StyledForm","Form","Input","Field","SearchButton","initialValues","query","SearchMovies","onSubmit","value","resetForm","trim","name","type","placeholder","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","setLoading","get","useEffect","getSearchedMovie","then","data","length","toast","finally","q","updateQuery","Loader","MovieList","API_KEY","getMovieById","movieId","url","axios","resp","getTrendingMovies","results","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}