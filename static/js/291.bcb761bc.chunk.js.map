{"version":3,"file":"static/js/291.bcb761bc.chunk.js","mappings":"qQAEaA,EAAcC,EAAAA,EAAAA,GAAH,8DAKXC,EAAcD,EAAAA,EAAAA,GAAH,gLAOXE,EAASF,EAAAA,EAAAA,EAAH,iDAKNG,EAAcH,EAAAA,EAAAA,KAAH,iE,SCiCxB,EA5CgB,WACZ,OAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAUC,OARDC,EAAAA,EAAAA,YAAU,WACND,GAAW,GACPH,IACAK,EAAAA,EAAAA,IAAgBL,GACXM,MAAK,SAAAC,GAAI,OAAIR,EAAWQ,EAAf,IAAsBC,SAAQ,kBAAML,GAAW,EAAjB,GAEnD,GAAE,CAACH,IAEEF,GAKN,6BACsB,IAAnBA,EAAQW,QACP,uEAEA,SAACjB,EAAD,UACGM,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACnB,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,sBAAmC,IAClCgB,GAAkB,qBAErB,uBAAIC,GAAoB,qBALRF,EADP,SATZ,8BAAGT,IAAW,SAACY,EAAA,EAAD,KAsBxB,C,mMC1CKC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhB,GAA5B,gFACGiB,EADH,6CAC+CjB,EAD/C,oBACkEe,EADlE,qCAGgBG,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKZ,MAJT,0IAUA,SAAea,IAAtB,4CAAO,OAAP,oBAAO,6FACGH,EADH,mEACqEF,GADrE,kBAGoBG,EAAAA,EAAAA,IAAUD,GAH9B,cAGOE,EAHP,yBAIQA,EAAKZ,KAAKc,SAJlB,0IAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BtB,GAA5B,gFACIiB,EADJ,6CACgDjB,EADhD,4BAC2Ee,EAD3E,qCAGgBG,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKZ,KAAKgB,MAJd,0IAUA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,yFAEYiB,EAFZ,6CAEwDjB,EAFxD,4BAEmFe,EAFnF,4BAGgBG,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKZ,KAAKc,SAJd,0IAUA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFAEGR,EAFH,4DAE8DF,EAF9D,kBAE+EU,EAF/E,iCAGgBP,EAAAA,EAAAA,IAAUD,GAH1B,cAGGE,EAHH,yBAIIA,EAAKZ,KAAKc,SAJd,0I","sources":["components/MovieReviews/MovieReviews.styled.jsx","components/MovieReviews/MovieReviews.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ReviewsList = styled.ul`\nlist-style: none; \npadding: 20px 0;\n`;\n\nexport const ReviewsItem = styled.li`\n  margin-bottom: 24px;\n  padding: 10px;\n  border: 2px solid black; \n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 8px;\n\n`;\n\nexport const AuthorTitle = styled.span`\n  font-size: 18px;\n  font-weight: 700;\n`;","import { useState, useEffect } from \"react\";\nimport { getMovieReviews } from \"services/api\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { ReviewsList, ReviewsItem, Author, AuthorTitle } from \"./MovieReviews.styled\";\nimport PropTypes from 'prop-types';\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState(null); \n    const { movieId } = useParams(); \n    const [loading, setLoading] = useState(false); \n\n    useEffect(() => {\n        setLoading(true);\n        if (movieId) {\n            getMovieReviews(movieId)\n                .then(data => setReviews(data)).finally(() => setLoading(false));\n        }\n    }, [movieId]);\n\n     if (!reviews) {\n    return <>{loading && <Loader />}</>;\n  }\n\n  return (\n    <section>\n      {reviews.length === 0 ? (\n        <p>We dont't have any reviews for this movie.</p>\n      ) : (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <ReviewsItem key={id}>\n              <Author>\n                <AuthorTitle>Author:</AuthorTitle>{' '}\n                {author ? author : 'No information'}\n              </Author>\n              <p>{content ? content : 'No information'}</p>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      )}\n    </section>\n  );\n};\n\nReviews.propTypes = {\n  id: PropTypes.number,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = 'a672ae57e08bb16567badfa77d9e520f'; \n\nexport async function getMovieById(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\nexport async function getMovieCast(movieId) {\n     const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getMovieReviews(movieId) {\n  try {\n             const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSearchedMovie(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}"],"names":["ReviewsList","styled","ReviewsItem","Author","AuthorTitle","useState","reviews","setReviews","movieId","useParams","loading","setLoading","useEffect","getMovieReviews","then","data","finally","length","map","id","author","content","Loader","API_KEY","getMovieById","url","axios","resp","getTrendingMovies","results","getMovieCast","cast","getSearchedMovie","query"],"sourceRoot":""}