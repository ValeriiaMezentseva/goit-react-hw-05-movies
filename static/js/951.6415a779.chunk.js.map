{"version":3,"file":"static/js/951.6415a779.chunk.js","mappings":"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","sources":["pages/MovieInfo/MovieInfo.styled.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieInfo/MovieInfo.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Container = styled.main`\n\nmax-width: 960px;\nmargin: 0 auto;\npadding: 0 16px;\n`\n\nexport const InfoWrapper = styled.div`\nmargin-top: 10px;\ndisplay: flex;\ngap: 20px;\npadding: 10px;\nborder: 10px solid black;\nborder-radius: 10px;\n box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nexport const MovieDetails = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const StyledLink = styled(NavLink)`\ndisplay: block;\npadding: 6px 10px;\nfont-size: 16px;\nfont-weight: 500;\ntext-decoration: none;\ntext-transform: uppercase;\ncolor: #000000;\nborder: 2px solid black;\ntransition: color 200ms linear;\n&:hover:not(.active) {\n    color: #bd0000;\n    border-color: #bd0000;\n  }\n  \n  &.active {\n    color: #bd0000;\n    border-color: #bd0000;;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\nlist-style: none; \ndisplay: flex;\njustify-content: center;\npadding: 10px;\n`\n\nexport const MoreInfoItem = styled.li`\nmargin-left: 20px;\n`;\n\nexport const AdditionalInfo = styled.h2`\nmargin-top: 30px;\nmargin-bottom: 10px;\nfont-size: 24px;\ntext-align: center; \n`;","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\ndisplay: inline-flex;\nalign-items: center;\ngap: 4px;\npadding: 8px 0;\ncolor: black;\ntext-decoration: none;\nfont-weight: 500;\ntext-transform: uppercase;\n:hover {\n    color: #bd0000;\n  }\n`;\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackLink.styled\";\nimport PropTypes from 'prop-types'\n\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n   children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n\n}\n","import { getMovieById } from \"services/api\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { useLocation, useParams, Outlet } from \"react-router-dom\";\nimport { Container , InfoWrapper, MovieDetails, StyledLink, MoreInfoList, MoreInfoItem, AdditionalInfo } from \"./MovieInfo.styled\";\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { Loader } from \"components/Loader/Loader\";\n\n\n\nconst MovieInfo = () => {\n    const [movie, setMovie] = useState({});\n    const [loading, setLoading] = useState(false); \n    const location = useLocation();\n    const { movieId } = useParams();\n    const backLinkHref = location.state?.from ?? '/movies';\n\n\n    useEffect(() => {\n        if (movieId) {\n            setLoading(true);\n            getMovieById(movieId).then(data => { setMovie(data) }).finally(() => setLoading(false));\n        }\n        \n    }, [movieId]);\n\n    const {\n        title,\n        genres = [],\n        poster_path,\n        overview,\n        vote_average = 1,\n        release_date = '',\n    } = movie;\n    \n    const genresList = genres.map(genre => genre.name).join(', ');\n    const releaseYear = release_date.split('-').slice(0, 1).join('');\n    const voteAverage = vote_average.toFixed(1) * 10;\n\n    return (\n        <>\n            {loading && <Loader />}\n        <Container>\n            <BackLink to={backLinkHref}>Back to movies</BackLink>\n            <InfoWrapper>\n                <div>\n                    <img\n                        src={poster_path && `https://image.tmdb.org/t/p/w300${poster_path}`}\n                        alt={title}\n                        loading=\"lazy\"\n                    />\n                </div>\n            \n                <MovieDetails>\n                    <h2> {title}({releaseYear})</h2>\n                    <p>User Rate: {voteAverage}%</p>\n                    <h3>Preview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{genresList}</p>\n                </MovieDetails>\n                \n\n            </InfoWrapper>\n            <AdditionalInfo>Additional Information</AdditionalInfo>\n            <MoreInfoList>\n                    <MoreInfoItem>\n                        <StyledLink to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n                            Cast\n                        </StyledLink>\n                    </MoreInfoItem>\n                    <MoreInfoItem>\n                        <StyledLink to=\"reviews\" state={{ from: location.state?.from ?? '/' }}>\n                            Reviews\n                        </StyledLink>\n                    </MoreInfoItem>\n                </MoreInfoList>\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n            </Container>\n            </>\n    )\n};\n\n\nexport default MovieInfo; ","import axios from \"axios\";\n\nconst API_KEY = 'a672ae57e08bb16567badfa77d9e520f'; \n\nexport async function getMovieById(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    try {\n        const resp = await axios.get(url);\n        return resp.data.results;\n    } catch (error) {\n        return; \n    }   \n};\n\nexport async function getMovieCast(movieId) {\n     const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n      try {\n    const resp = await axios.get(url);\n    return resp.data.cast;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getMovieReviews(movieId) {\n  try {\n             const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n};\n\nexport async function getSearchedMovie(query) {\n  try {\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`;\n    const resp = await axios.get(url);\n    return resp.data.results;\n  } catch (error) {\n    return;\n  }\n}"],"names":["Container","styled","InfoWrapper","MovieDetails","StyledLink","NavLink","MoreInfoList","MoreInfoItem","AdditionalInfo","Link","BackLink","to","children","size","useState","movie","setMovie","loading","setLoading","location","useLocation","movieId","useParams","backLinkHref","state","from","useEffect","getMovieById","then","data","finally","title","genres","poster_path","overview","vote_average","release_date","genresList","map","genre","name","join","releaseYear","split","slice","voteAverage","toFixed","Loader","src","alt","Suspense","fallback","API_KEY","url","axios","resp","getTrendingMovies","results","getMovieCast","cast","getMovieReviews","getSearchedMovie","query"],"sourceRoot":""}